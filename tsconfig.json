{
  "compilerOptions": {
    "target": "ES5", // 允许以.js结尾的文件存在
    "jsx": "preserve", // 加载的声明文件包
    "lib": ["ES2020", "DOM", "DOM.Iterable"], // TS需要引用的库,如果需要使用新的ES特性，则需要在此引入
    "useDefineForClassFields": true, // 指定使用的模块标准
    "baseUrl": "./", // 编译后的js版本
    "module": "ESNext", // 指定查找路径
    "moduleResolution": "bundler", // 允许默认导入时通过as起别名
    "paths": {
      "@/*": ["packages/*"]
    }, // 使用class关键字创建类时，会将类中的字段属性转换为Object.defineProperty
    "resolveJsonModule": true, // 保留jsx
    "types": ["vite/client", "node", "vue"], // 可以在TS中导入JSON模块
    "allowImportingTsExtensions": true, // 将所有编译结果输出到dist目录下
    "allowJs": true, // 允许导入时保留ts文件扩展名
    "strict": true, // 严格类型检查
    "noFallthroughCasesInSwitch": true, // 防止switch语句贯穿(即如果没有break语句后面不会执行)
    "noUnusedLocals": true, // 检查只声明、未使用的局部变量(只提示不报错)
    "noUnusedParameters": true, // 检查未使用的函数参数(只提示不报错)
    "noEmit": true, // 使用打包工具的解析策略
    "outDir": "./dist", // 跳过对声明文件(*.d.ts)的类型检查
    "esModuleInterop": true, // 不输出文件,即编译后不会生成任何js文件
    "isolatedModules": true, // 强制开发者的每个模块都能作为单个模块独立编译
    "skipLibCheck": true
  },
  "references": [
    { "path": "./tsconfig.node.json" }
  ],
  "include": [
    "packages/**/*.ts",
    "packages/**/*.tsx",
    "packages/**/*.vue"
  ]
}
